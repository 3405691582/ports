64bit time_t

Index: imap/jmap_backup.c
--- imap/jmap_backup.c.orig
+++ imap/jmap_backup.c
@@ -385,7 +385,7 @@ static int restore_collection_cb(const mbentry_t *mben
     if ((rrock->jrestore->mode & UNDO_ALL) &&
         rrock->jrestore->cutoff < rrock->mailbox->i.changes_epoch) {
         syslog(log_level,
-               "skipping '%s': cutoff (%ld) prior to mailbox history (%ld)",
+               "skipping '%s': cutoff (%lld) prior to mailbox history (%lld)",
                mailbox_name(rrock->mailbox), rrock->jrestore->cutoff,
                rrock->mailbox->i.changes_epoch);
 
@@ -403,7 +403,7 @@ static int restore_collection_cb(const mbentry_t *mben
 
         resource = rrock->resource_name_cb(msg, rrock->rock);
         syslog(log_level,
-               "UID %u: expunged: %x, savedate: %ld, updated: %ld, name: %s",
+               "UID %u: expunged: %x, savedate: %lld, updated: %lld, name: %s",
                record->uid, (record->internal_flags & FLAG_INTERNAL_EXPUNGED),
                record->savedate, record->last_updated,
                resource ? resource : "NULL");
@@ -903,7 +903,7 @@ static int jmap_backup_restore_contacts(jmap_req_t *re
     struct mboxlock *namespacelock = user_namespacelock(req->accountid);
     char *addrhomeset = carddav_mboxname(req->accountid, NULL);
 
-    syslog(restore.log_level, "jmap_backup_restore_contacts(%s, %ld)",
+    syslog(restore.log_level, "jmap_backup_restore_contacts(%s, %lld)",
            addrhomeset, restore.cutoff);
 
     struct contact_rock crock =
@@ -1396,7 +1396,7 @@ static int jmap_backup_restore_calendars(jmap_req_t *r
     struct mboxlock *namespacelock = user_namespacelock(req->accountid);
     char *calhomeset = caldav_mboxname(req->accountid, NULL);
 
-    syslog(restore.log_level, "jmap_backup_restore_calendars(%s, %ld)",
+    syslog(restore.log_level, "jmap_backup_restore_calendars(%s, %lld)",
            calhomeset, restore.cutoff);
 
     struct calendar_rock crock =
@@ -1489,7 +1489,7 @@ static int jmap_backup_restore_notes(jmap_req_t *req)
     struct mboxlock *namespacelock = user_namespacelock(req->accountid);
     const char *subfolder = config_getstring(IMAPOPT_NOTESMAILBOX);
 
-    syslog(restore.log_level, "jmap_backup_restore_notes(%s, %ld)",
+    syslog(restore.log_level, "jmap_backup_restore_notes(%s, %lld)",
            subfolder ? subfolder : "NULL", restore.cutoff);
 
     if (subfolder) {
@@ -1614,7 +1614,7 @@ static int restore_message_list_cb(const mbentry_t *mb
     if (mboxname_isdeletedmailbox(mbentry->name, &timestamp)) {
         if (timestamp <= rrock->jrestore->cutoff) {
             /* Mailbox was destroyed before cutoff - not interested */
-            syslog(log_level, "skipping '%s': destroyed (%ld) before cutoff",
+            syslog(log_level, "skipping '%s': destroyed (%lld) before cutoff",
                    mbentry->name, timestamp);
 
             return 0;
@@ -1642,7 +1642,7 @@ static int restore_message_list_cb(const mbentry_t *mb
         int ignore_draft = 0;
 
         syslog(log_level,
-               "UID %u: expunged: %x, draft: %x, intdate: %ld, updated: %ld",
+               "UID %u: expunged: %x, draft: %x, intdate: %lld, updated: %lld",
                record->uid, (record->internal_flags & FLAG_INTERNAL_EXPUNGED),
                (record->system_flags & FLAG_DRAFT),
                record->internaldate, record->last_updated);
@@ -2142,7 +2142,7 @@ static int jmap_backup_restore_mail(jmap_req_t *req)
     hash_table msgids = HASH_TABLE_INITIALIZER;
     char *inbox = mboxname_user_mbox(req->accountid, NULL);
 
-    syslog(restore.log_level, "jmap_backup_restore_mail(%s, %ld)",
+    syslog(restore.log_level, "jmap_backup_restore_mail(%s, %lld)",
            inbox, restore.cutoff);
 
     struct mail_rock mrock = {
