Fix build with utfcpp 4.x.
From upstream 1211c1a2ed6c8b615bab1dc5b11dd340ece40368.

Index: apertium/adapt_docx.cc
--- apertium/adapt_docx.cc.orig
+++ apertium/adapt_docx.cc
@@ -24,6 +24,7 @@
 #include <libxml/tree.h>
 #include <stack>
 #include <vector>
+#include <unistd.h>
 
 #ifdef _MSC_VER
 #include <io.h>
@@ -257,13 +258,13 @@ size_t findBoundary(string _text, size_t begin)
 	size_t length = _text.length();
 	if (begin == 0 || begin >= length)
 		return begin;
-	const unsigned char *text = (unsigned char *) _text.c_str();
-	utf8::iterator<const unsigned char*> textBegin(text, text, text + length);
-	utf8::iterator<const unsigned char*> textEnd(text + length, text, text + length);
-	utf8::iterator<const unsigned char*> it(text + begin, text, text + length);
-	utf8::iterator<const unsigned char*> minBoundary = it;
+	auto text = _text.c_str();
+	utf8::iterator<const char*> textBegin(text, text, text + length);
+	utf8::iterator<const char*> textEnd(text + length, text, text + length);
+	utf8::iterator<const char*> it(text + begin, text, text + length);
+	utf8::iterator<const char*> minBoundary = it;
 	uint32_t cur = *it, cur_1 = 0, cur_2 = 0;
-	utf8::iterator<const unsigned char*> it2 = it;
+	utf8::iterator<const char*> it2 = it;
 	cur_1 = *(--it2);
 	if (it2 != textBegin)
 		cur_2 = *(--it2);
@@ -412,7 +413,7 @@ void process(string fileName, bool outputsName, bool p
 	xmlDocDumpFormatMemory(document, &buffer, &sizeBuffer, pretty ? 1: 0);
 	if (outputsName)
 		cout << "<file name=\"" << fileName << "\"/> ";
-	const unsigned char *p = buffer;
+	const xmlChar *p = buffer;
 	p = printNl2spc(p);
 	if (pretty)
 		cout << p;
@@ -427,6 +428,10 @@ void process(string fileName, bool outputsName, bool p
 
 int main(int argc, char *argv[])
 {
+	if (pledge("stdio rpath wpath cpath", NULL) == -1) {
+		cerr << "pledge" << endl;
+		exit(EXIT_FAILURE);
+	}
 
 	bool outputsName = false;
 	bool pretty = false;
