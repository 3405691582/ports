Revert fix(strutil.h): ensure proper constexpr of string hashing (#3901)
8e8dab1215f584ff940ea6240768abecd5c63f07

Index: src/include/OpenImageIO/string_view.h
--- src/include/OpenImageIO/string_view.h.orig
+++ src/include/OpenImageIO/string_view.h
@@ -106,8 +106,9 @@ class basic_string_view { (public)
         : m_chars(chars), m_len(len) { }
 
     /// Construct from char*, use strlen to determine length.
-    constexpr basic_string_view(const CharT* chars) noexcept
-        : m_chars(chars), m_len(chars ? cestrlen(chars) : 0) { }
+    OIIO_CONSTEXPR17 basic_string_view(const CharT* chars) noexcept
+        : m_chars(chars), m_len(chars ? Traits::length(chars) : 0) { }
+    // N.B. char_traits::length() is constexpr starting with C++17.
 
     /// Construct from std::string. Remember that a string_view doesn't have
     /// its own copy of the characters, so don't use the `string_view` after
@@ -428,20 +429,6 @@ class basic_string_view { (public)
             if (!traits::find(s.data(), s.length(), *first))
                 return first;
         return last;
-    }
-
-    // Guaranteed constexpr length of a C string
-    static constexpr size_t cestrlen(const charT* chars) {
-#if OIIO_CPLUSPLUS_VERSION >= 17
-        return Traits::length(chars);
-#else
-        if (chars == nullptr)
-            return 0;
-        size_t len = 0;
-        while (chars[len] != 0)
-            len++;
-        return len;
-#endif
     }
 
     class traits_eq {
