Don't disable the stack protector on OpenBSD and FreeBSD.
Avoid using the 'preserve_most' attribute which clashes with -fret-protector.

Index: src/3rdparty/chromium/base/compiler_specific.h
--- src/3rdparty/chromium/base/compiler_specific.h.orig
+++ src/3rdparty/chromium/base/compiler_specific.h
@@ -316,7 +316,7 @@
 //
 // In some cases it's desirable to remove this, e.g. on hot functions, or if
 // we have purposely changed the reference canary.
-#if defined(COMPILER_GCC) || defined(__clang__)
+#if (defined(COMPILER_GCC) || defined(__clang__)) && !defined(__OpenBSD__) && !defined(__FreeBSD__)
 #if HAS_ATTRIBUTE(__no_stack_protector__)
 #define NO_STACK_PROTECTOR __attribute__((__no_stack_protector__))
 #else
@@ -448,7 +448,8 @@ inline constexpr bool AnalyzerAssumeTrue(bool arg) {
 #if defined(ARCH_CPU_64_BITS) &&                       \
     !(BUILDFLAG(IS_WIN) && defined(ARCH_CPU_ARM64)) && \
     !defined(COMPONENT_BUILD) && defined(__clang__) && \
-    __clang_major__ >= 17 && HAS_ATTRIBUTE(preserve_most)
+    __clang_major__ >= 17 && HAS_ATTRIBUTE(preserve_most) && \
+    !defined(_RET_PROTECTOR)
 #define PRESERVE_MOST __attribute__((preserve_most))
 #else
 #define PRESERVE_MOST
