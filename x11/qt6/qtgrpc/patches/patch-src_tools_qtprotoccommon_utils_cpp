https://github.com/qt/qtgrpc/commit/514769d1bd595d0e54bbe34c0bd167636d4825dc

Index: src/tools/qtprotoccommon/utils.cpp
--- src/tools/qtprotoccommon/utils.cpp.orig
+++ src/tools/qtprotoccommon/utils.cpp
@@ -78,20 +78,22 @@ void asciiToUpper(std::string &str)
     std::transform(std::begin(str), std::end(str), std::begin(str), utils::toAsciiUpper);
 }
 
-std::string removeFileSuffix(std::string fileName)
+std::string removeFileSuffix(std::string_view fileName)
 {
-    size_t dot = fileName.rfind('.'), slash = fileName.rfind('/');
+    std::string result(fileName);
+    size_t dot = result.rfind('.'), slash = result.rfind('/');
     if (dot != std::string::npos && (slash == std::string::npos || dot > slash))
-        fileName.resize(dot);
-    return fileName;
+        result.resize(dot);
+    return result;
 }
 
-std::string extractFileBasename(std::string fileName)
+std::string extractFileBasename(std::string_view fileName)
 {
-    size_t dot = fileName.rfind('.'), slash = fileName.rfind('/');
+    std::string result(fileName);
+    size_t dot = result.rfind('.'), slash = result.rfind('/');
     if (dot != std::string::npos && (slash == std::string::npos || dot > slash))
-        fileName.resize(dot);
-    return slash != std::string::npos ? fileName.substr(slash + 1) : fileName;
+        result.resize(dot);
+    return slash != std::string::npos ? result.substr(slash + 1) : result;
 }
 
 std::string toValidIdentifier(std::string_view name)
@@ -113,20 +115,22 @@ std::string toValidIdentifier(std::string_view name)
     return out;
 }
 
-std::string capitalizeAsciiName(std::string name)
+std::string capitalizeAsciiName(std::string_view name)
 {
-    if (name.empty() || !isAsciiAlpha(name[0]))
-        return name;
-    name[0] &= ~char(0x20);
-    return name;
+    std::string result(name);
+    if (result.empty() || !isAsciiAlpha(result[0]))
+        return result;
+    result[0] &= ~char(0x20);
+    return result;
 }
 
-std::string deCapitalizeAsciiName(std::string name)
+std::string deCapitalizeAsciiName(std::string_view name)
 {
-    if (name.empty() || !isAsciiAlpha(name[0]))
-        return name;
-    name[0] |= char(0x20);
-    return name;
+    std::string result(name);
+    if (result.empty() || !isAsciiAlpha(result[0]))
+        return result;
+    result[0] |= char(0x20);
+    return result;
 }
 
 std::string &rtrim(std::string &s)
