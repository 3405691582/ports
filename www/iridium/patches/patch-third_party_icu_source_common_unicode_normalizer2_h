Fix build with icu4c>=73.1

Index: third_party/icu/source/common/unicode/normalizer2.h
--- third_party/icu/source/common/unicode/normalizer2.h.orig
+++ third_party/icu/source/common/unicode/normalizer2.h
@@ -533,7 +533,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
     virtual UnicodeString &
     normalize(const UnicodeString &src,
               UnicodeString &dest,
-              UErrorCode &errorCode) const U_OVERRIDE;
+              UErrorCode &errorCode) const override;
 
     /**
      * Normalizes a UTF-8 string and optionally records how source substrings
@@ -559,7 +559,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      */
     virtual void
     normalizeUTF8(uint32_t options, StringPiece src, ByteSink &sink,
-                  Edits *edits, UErrorCode &errorCode) const U_OVERRIDE;
+                  Edits *edits, UErrorCode &errorCode) const override;
 
     /**
      * Appends the normalized form of the second string to the first string
@@ -578,7 +578,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
     virtual UnicodeString &
     normalizeSecondAndAppend(UnicodeString &first,
                              const UnicodeString &second,
-                             UErrorCode &errorCode) const U_OVERRIDE;
+                             UErrorCode &errorCode) const override;
     /**
      * Appends the second string to the first string
      * (merging them at the boundary) and returns the first string.
@@ -596,7 +596,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
     virtual UnicodeString &
     append(UnicodeString &first,
            const UnicodeString &second,
-           UErrorCode &errorCode) const U_OVERRIDE;
+           UErrorCode &errorCode) const override;
 
     /**
      * Gets the decomposition mapping of c.
@@ -610,7 +610,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 4.6
      */
     virtual UBool
-    getDecomposition(UChar32 c, UnicodeString &decomposition) const U_OVERRIDE;
+    getDecomposition(UChar32 c, UnicodeString &decomposition) const override;
 
     /**
      * Gets the raw decomposition mapping of c.
@@ -624,7 +624,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 49
      */
     virtual UBool
-    getRawDecomposition(UChar32 c, UnicodeString &decomposition) const U_OVERRIDE;
+    getRawDecomposition(UChar32 c, UnicodeString &decomposition) const override;
 
     /**
      * Performs pairwise composition of a & b and returns the composite if there is one.
@@ -637,7 +637,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 49
      */
     virtual UChar32
-    composePair(UChar32 a, UChar32 b) const U_OVERRIDE;
+    composePair(UChar32 a, UChar32 b) const override;
 
     /**
      * Gets the combining class of c.
@@ -648,7 +648,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 49
      */
     virtual uint8_t
-    getCombiningClass(UChar32 c) const U_OVERRIDE;
+    getCombiningClass(UChar32 c) const override;
 
     /**
      * Tests if the string is normalized.
@@ -662,7 +662,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 4.4
      */
     virtual UBool
-    isNormalized(const UnicodeString &s, UErrorCode &errorCode) const U_OVERRIDE;
+    isNormalized(const UnicodeString &s, UErrorCode &errorCode) const override;
     /**
      * Tests if the UTF-8 string is normalized.
      * Internally, in cases where the quickCheck() method would return "maybe"
@@ -683,7 +683,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 60
      */
     virtual UBool
-    isNormalizedUTF8(StringPiece s, UErrorCode &errorCode) const U_OVERRIDE;
+    isNormalizedUTF8(StringPiece s, UErrorCode &errorCode) const override;
     /**
      * Tests if the string is normalized.
      * For details see the Normalizer2 base class documentation.
@@ -696,7 +696,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 4.4
      */
     virtual UNormalizationCheckResult
-    quickCheck(const UnicodeString &s, UErrorCode &errorCode) const U_OVERRIDE;
+    quickCheck(const UnicodeString &s, UErrorCode &errorCode) const override;
     /**
      * Returns the end of the normalized substring of the input string.
      * For details see the Normalizer2 base class documentation.
@@ -709,7 +709,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @stable ICU 4.4
      */
     virtual int32_t
-    spanQuickCheckYes(const UnicodeString &s, UErrorCode &errorCode) const U_OVERRIDE;
+    spanQuickCheckYes(const UnicodeString &s, UErrorCode &errorCode) const override;
 
     /**
      * Tests if the character always has a normalization boundary before it,
@@ -719,7 +719,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @return true if c has a normalization boundary before it
      * @stable ICU 4.4
      */
-    virtual UBool hasBoundaryBefore(UChar32 c) const U_OVERRIDE;
+    virtual UBool hasBoundaryBefore(UChar32 c) const override;
 
     /**
      * Tests if the character always has a normalization boundary after it,
@@ -729,7 +729,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @return true if c has a normalization boundary after it
      * @stable ICU 4.4
      */
-    virtual UBool hasBoundaryAfter(UChar32 c) const U_OVERRIDE;
+    virtual UBool hasBoundaryAfter(UChar32 c) const override;
 
     /**
      * Tests if the character is normalization-inert.
@@ -738,7 +738,7 @@ class U_COMMON_API FilteredNormalizer2 : public Normal
      * @return true if c is normalization-inert
      * @stable ICU 4.4
      */
-    virtual UBool isInert(UChar32 c) const U_OVERRIDE;
+    virtual UBool isInert(UChar32 c) const override;
 private:
     UnicodeString &
     normalize(const UnicodeString &src,
