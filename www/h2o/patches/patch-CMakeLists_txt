wslay is picked up and used if present during configure, but isn't
registered as a dependency in the libraries. disable it for now.

mruby improvements from upstream

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -140,22 +140,22 @@ IF (DISABLE_LIBUV)
     SET(LIBUV_FOUND FALSE)
 ENDIF(DISABLE_LIBUV)
 
-IF (PKG_CONFIG_FOUND)
-    PKG_CHECK_MODULES(WSLAY libwslay)
-    IF (WSLAY_FOUND)
-        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIRS})
-        LINK_DIRECTORIES(${WSLAY_LIBRARY_DIRS})
-    ENDIF (WSLAY_FOUND)
-ENDIF (PKG_CONFIG_FOUND)
-IF (NOT WSLAY_FOUND)
-    FIND_PACKAGE(Wslay)
-    IF (WSLAY_FOUND)
-        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIR})
-    ENDIF (WSLAY_FOUND)
-ENDIF (NOT WSLAY_FOUND)
-IF (NOT WSLAY_FOUND)
-    SET(WSLAY_LIBRARIES -lwslay)
-ENDIF (NOT WSLAY_FOUND)
+#IF (PKG_CONFIG_FOUND)
+#    PKG_CHECK_MODULES(WSLAY libwslay)
+#    IF (WSLAY_FOUND)
+#        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIRS})
+#        LINK_DIRECTORIES(${WSLAY_LIBRARY_DIRS})
+#    ENDIF (WSLAY_FOUND)
+#ENDIF (PKG_CONFIG_FOUND)
+#IF (NOT WSLAY_FOUND)
+#    FIND_PACKAGE(Wslay)
+#    IF (WSLAY_FOUND)
+#        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIR})
+#    ENDIF (WSLAY_FOUND)
+#ENDIF (NOT WSLAY_FOUND)
+#IF (NOT WSLAY_FOUND)
+#    SET(WSLAY_LIBRARIES -lwslay)
+#ENDIF (NOT WSLAY_FOUND)
 
 IF (ZLIB_FOUND)
     INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
@@ -460,14 +460,21 @@ IF (WITH_MRUBY)
     ELSE ()
         SET(MRUBY_TOOLCHAIN "gcc")
     ENDIF ()
-    ADD_CUSTOM_TARGET(mruby MRUBY_TOOLCHAIN=${MRUBY_TOOLCHAIN} MRUBY_CONFIG=${CMAKE_CURRENT_SOURCE_DIR}/misc/mruby_config.rb MRUBY_BUILD_DIR=${CMAKE_CURRENT_BINARY_DIR}/mruby ruby minirake
-        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/deps/mruby)
+    ADD_CUSTOM_TARGET(mruby
+        # deps/mruby/tasks/toolchains/clang.rake looks for CC, CXX and LD.
+        # There are no C++ files in deps/mruby, use the C compiler for linking.
+        MRUBY_TOOLCHAIN=${MRUBY_TOOLCHAIN} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} LD=${CMAKE_C_COMPILER} MRUBY_CONFIG=${CMAKE_CURRENT_SOURCE_DIR}/misc/mruby_config.rb MRUBY_BUILD_DIR=${CMAKE_CURRENT_BINARY_DIR}/mruby MRUBY_ADDITIONAL_CONFIG=${MRUBY_ADDITIONAL_CONFIG} ruby minirake
+        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/deps/mruby
+        BYPRODUCTS "${CMAKE_CURRENT_BINARY_DIR}/mruby/host/lib/libmruby.a"
+                   "${CMAKE_CURRENT_BINARY_DIR}/mruby/host/mrbgems/mruby-onig-regexp/onigmo-6.1.1/.libs/libonigmo.a"
+    )
     LIST(APPEND STANDALONE_SOURCE_FILES
         lib/handler/mruby.c
         lib/handler/mruby/chunked.c
         lib/handler/mruby/http_request.c
         lib/handler/configurator/mruby.c)
     SET(STANDALONE_COMPILE_FLAGS "${STANDALONE_COMPILE_FLAGS} -DH2O_USE_MRUBY=1")
+    SET_PROPERTY(DIRECTORY PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${CMAKE_CURRENT_BINARY_DIR}/mruby/)
 ENDIF (WITH_MRUBY)
 IF (WITH_PICOTLS)
     LIST(APPEND STANDALONE_SOURCE_FILES ${PICOTLS_SOURCE_FILES})
