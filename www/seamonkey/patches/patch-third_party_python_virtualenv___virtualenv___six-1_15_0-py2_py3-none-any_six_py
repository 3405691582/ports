upgrade to six 1.16 to fix 'no module six.moves'

cf https://bugzilla.mozilla.org/show_bug.cgi?id=1857492

Index: third_party/python/virtualenv/__virtualenv__/six-1.15.0-py2.py3-none-any/six.py
--- third_party/python/virtualenv/__virtualenv__/six-1.15.0-py2.py3-none-any/six.py.orig
+++ third_party/python/virtualenv/__virtualenv__/six-1.15.0-py2.py3-none-any/six.py
@@ -29,7 +29,7 @@ import sys
 import types
 
 __author__ = "Benjamin Peterson <benjamin@python.org>"
-__version__ = "1.15.0"
+__version__ = "1.16.0"
 
 
 # Useful for very coarse version differentiation.
@@ -71,7 +71,12 @@ else:
             MAXSIZE = int((1 << 63) - 1)
         del X
 
+if PY34:
+    from importlib.util import spec_from_loader
+else:
+    spec_from_loader = None
 
+
 def _add_doc(func, doc):
     """Add documentation to a function."""
     func.__doc__ = doc
@@ -186,6 +191,11 @@ class _SixMetaPathImporter(object):
             return self
         return None
 
+    def find_spec(self, fullname, path, target=None):
+        if fullname in self.known_modules:
+            return spec_from_loader(fullname, self)
+        return None
+
     def __get_module(self, fullname):
         try:
             return self.known_modules[fullname]
@@ -222,6 +232,12 @@ class _SixMetaPathImporter(object):
         self.__get_module(fullname)  # eventually raises ImportError
         return None
     get_source = get_code  # same as get_code
+
+    def create_module(self, spec):
+        return self.load_module(spec.name)
+
+    def exec_module(self, module):
+        pass
 
 _importer = _SixMetaPathImporter(__name__)
 
