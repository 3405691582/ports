Index: meson.build
--- meson.build.orig
+++ meson.build
@@ -30,7 +30,6 @@ libinput       = dependency('libinput', version: '>=1.
 pixman         = dependency('pixman-1')
 threads        = dependency('threads')
 xkbcommon      = dependency('xkbcommon')
-libdl          = meson.get_compiler('cpp').find_library('dl')
 
 # We're not to use system wlroots: So we'll use the subproject
 if get_option('use_system_wlroots').disabled()
@@ -58,7 +57,7 @@ if get_option('use_system_wfconfig').disabled()
 
 elif get_option('use_system_wfconfig').enabled()
 	use_system_wfconfig = true
-	wfconfig = dependency('wf-config', version: ['>=0.9.0', '<0.10.0'], required: true)
+	wfconfig = dependency('wf-config', version: ['>=0.8.0', '<0.10.0'], required: true)
 
 elif get_option('use_system_wfconfig').auto()
 	wfconfig = dependency('wf-config', version: ['>=0.9.0', '<0.10.0'], required: false)
@@ -72,7 +71,7 @@ endif
 wfutils = subproject('wf-utils').get_variable('wfutils')
 wftouch = subproject('wf-touch').get_variable('wftouch')
 
-needs_libinotify = ['freebsd', 'dragonfly'].contains(host_machine.system())
+needs_libinotify = ['freebsd', 'dragonfly', 'openbsd'].contains(host_machine.system())
 libinotify       = dependency('libinotify', required: needs_libinotify)
 
 jpeg = dependency('libjpeg', required: false)
@@ -84,18 +83,6 @@ backtrace = meson.get_compiler('cpp').find_library('ex
 conf_data = configuration_data()
 
 version = '"@0@"'.format(meson.project_version())
-git = find_program('git', native: true, required: false)
-if git.found()
-	git_commit = run_command([git, 'rev-parse', '--short', 'HEAD'], check: false)
-	git_branch = run_command([git, 'rev-parse', '--abbrev-ref', 'HEAD'], check: false)
-	if git_commit.returncode() == 0 and git_branch.returncode() == 0
-		version = '"@0@-@1@ (" __DATE__ ", branch \'@2@\')"'.format(
-			meson.project_version(),
-			git_commit.stdout().strip(),
-			git_branch.stdout().strip(),
-		)
-	endif
-endif
 add_project_arguments('-DWAYFIRE_VERSION=@0@'.format(version), language: 'cpp')
 conf_data.set('WAYFIRE_VERSION', '-DWAYFIRE_VERSION=@0@'.format(version))
 
