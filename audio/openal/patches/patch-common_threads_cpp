Recognize void(pthread_t,const char*)
e6fe5bc33485211b03242a193eb9a981916efee1

Index: common/threads.cpp
--- common/threads.cpp.orig
+++ common/threads.cpp
@@ -100,7 +100,8 @@ namespace {
 
 using setname_t1 = int(*)(const char*);
 using setname_t2 = int(*)(pthread_t, const char*);
-using setname_t3 = int(*)(pthread_t, const char*, void*);
+using setname_t3 = void(*)(pthread_t, const char*);
+using setname_t4 = int(*)(pthread_t, const char*, void*);
 
 void setname_caller(setname_t1 func, const char *name)
 { func(name); }
@@ -109,6 +110,9 @@ void setname_caller(setname_t2 func, const char *name)
 { func(pthread_self(), name); }
 
 void setname_caller(setname_t3 func, const char *name)
+{ func(pthread_self(), name); }
+
+void setname_caller(setname_t4 func, const char *name)
 { func(pthread_self(), "%s", static_cast<void*>(const_cast<char*>(name))); }
 
 } // namespace
@@ -125,6 +129,7 @@ void althrd_setname(const char *name)
     std::ignore = static_cast<void(*)(setname_t1,const char*)>(&setname_caller);
     std::ignore = static_cast<void(*)(setname_t2,const char*)>(&setname_caller);
     std::ignore = static_cast<void(*)(setname_t3,const char*)>(&setname_caller);
+    std::ignore = static_cast<void(*)(setname_t4,const char*)>(&setname_caller);
 }
 
 #ifdef __APPLE__
