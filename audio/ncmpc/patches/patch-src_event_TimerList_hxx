revert https://github.com/MusicPlayerDaemon/ncmpc/commit/63e3372775c7b1330d07e7e2be38170ad9076cae

to revisit when base libcxx is updated ?
Index: src/event/TimerList.hxx
--- src/event/TimerList.hxx.orig
+++ src/event/TimerList.hxx
@@ -6,7 +6,7 @@
 
 #include "Chrono.hxx"
 #include "event/Features.h"
-#include "util/IntrusiveTreeSet.hxx"
+#include <boost/intrusive/set.hpp>
 
 class FineTimerEvent;
 
@@ -14,12 +14,15 @@ class FineTimerEvent;
  * A list of #FineTimerEvent instances sorted by due time point.
  */
 class TimerList final {
-	struct GetDue {
-		constexpr Event::TimePoint operator()(const FineTimerEvent &timer) const noexcept;
+	struct Compare {
+		constexpr bool operator()(const FineTimerEvent &a,
+					  const FineTimerEvent &b) const noexcept;
 	};
 
-	IntrusiveTreeSet<FineTimerEvent,
-			 IntrusiveTreeSetOperators<FineTimerEvent, GetDue>> timers;
+	boost::intrusive::multiset<FineTimerEvent,
+				   boost::intrusive::base_hook<boost::intrusive::set_base_hook<boost::intrusive::link_mode<boost::intrusive::auto_unlink>>>,
+				   boost::intrusive::compare<Compare>,
+				   boost::intrusive::constant_time_size<false>> timers;
 
 public:
 	TimerList();
