This is a simple but advanced source code editor

As the editor is being developed, the rules of how the UI interacts will become
more well defined.

- Auto-indentation of wrapped lines.
- No code coloring (except comments and strings).
- Many TextArea utilities: undo/redo, replace, comment, ...
- Handles big files.
- Start external processes from the toolbar with a click, capturing the output
  to a row.
- Drag and drop files/directories to the editor.
- Detects if files opened are changed outside the editor.
- Plugin support
  - examples such as `gotodefinition` and `autocomplete`.
- Golang specific:
  - Calls goimports if available when saving a .go file.
  - Clicking on `.go` files identifiers will jump to the identifier definition
    (needs `gopls`).
  - Debug utility for go programs (`GoDebug` cmd).
    - allows to go back and forth in time to consult code values.
- Language Server Protocol (LSP) (code analysis):
  - `-lsproto` cmd line option
    - basic support for gotodefinition and completion
    - mostly being tested with `clangd` and `gopls`
- Inline complete
  - code completion by hitting the `tab` key (uses LSP).
