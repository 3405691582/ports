Fix build with poppler-24.10.0 and 24.12.0.

Index: sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx
--- sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx.orig
+++ sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx
@@ -1084,13 +1084,14 @@ void PDFOutDev::drawImageMask(GfxState* pState, Object
 {
     if (m_bSkipImages)
         return;
+    bool hasAlpha;
     OutputBuffer aBuf; initBuf(aBuf);
 
     printf( "drawMask %d %d %d", width, height, invert );
 
     int bitsPerComponent = 1;
     StreamColorSpaceMode csMode = streamCSNone;
-    str->getImageParams( &bitsPerComponent, &csMode );
+    str->getImageParams( &bitsPerComponent, &csMode, &hasAlpha );
     if( bitsPerComponent == 1 && (csMode == streamCSNone || csMode == streamCSDeviceGray) )
     {
         GfxRGB oneColor = { dblToCol( 1.0 ), dblToCol( 1.0 ), dblToCol( 1.0 ) };
@@ -1306,9 +1307,9 @@ poppler_bool PDFOutDev::tilingPatternFill(GfxState *st
         0, nBitmapWidth * nBitmapHeight, Object(objNull)));
     auto aDecode = Object(objNull);
     std::unique_ptr<GfxImageColorMap> pRgbIdentityColorMap(new GfxImageColorMap(8, &aDecode,
-        new GfxDeviceRGBColorSpace()));
+        std::unique_ptr<GfxColorSpace> (new GfxDeviceRGBColorSpace())));
     std::unique_ptr<GfxImageColorMap> pGrayIdentityColorMap(new GfxImageColorMap(8, &aDecode,
-        new GfxDeviceGrayColorSpace()));
+        std::unique_ptr<GfxColorSpace> (new GfxDeviceGrayColorSpace())));
 
     OutputBuffer aBuf; initBuf(aBuf);
     writePng_(aBuf, pRgbStr.get(), nBitmapWidth, nBitmapHeight, pRgbIdentityColorMap.get(),
