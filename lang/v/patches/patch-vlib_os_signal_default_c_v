os: fix bootstrapping for OpenBSD
e787620861528709869e0f4512d670af86736cc0

Index: vlib/os/signal_default.c.v
--- vlib/os/signal_default.c.v.orig
+++ vlib/os/signal_default.c.v
@@ -2,7 +2,6 @@
 module os
 
 #flag -lpthread
-#include <signal.h>
 
 fn C.pthread_self() usize
 
@@ -16,20 +15,7 @@ pub fn is_main_thread() bool {
 	return g_main_thread_id == u64(C.pthread_self())
 }
 
-[typedef]
-struct C.sigset_t {}
-
-fn C.sigaddset(set &C.sigset_t, signum int) int
-fn C.sigemptyset(set &C.sigset_t)
-fn C.sigprocmask(how int, set &C.sigset_t, oldset &C.sigset_t) int
-
 fn signal_ignore_internal(args ...Signal) {
-	$if !android && !macos {
-		mask1 := C.sigset_t{}
-		C.sigemptyset(&mask1)
-		for arg in args {
-			C.sigaddset(&mask1, int(arg))
-		}
-		C.sigprocmask(C.SIG_BLOCK, &mask1, unsafe { nil })
-	}
+	// just do nothing by default, since that is most portable ¯\_(ツ)_/¯,
+	// especially on platforms like OpenBSD etc
 }
