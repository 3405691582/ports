Implement instruction cache flush using sysarch(RISCV_SYNC_ICACHE).

Index: deps/v8/src/codegen/riscv/cpu-riscv.cc
--- deps/v8/src/codegen/riscv/cpu-riscv.cc.orig
+++ deps/v8/src/codegen/riscv/cpu-riscv.cc
@@ -4,7 +4,13 @@
 
 // CPU specific code for arm independent of OS goes here.
 
-#include <sys/syscall.h>
+#ifdef __OpenBSD__
+# include <sys/types.h>
+# include <machine/sysarch.h>
+#else
+# include <sys/syscall.h>
+#endif
+
 #include <unistd.h>
 
 #include "src/codegen/cpu-features.h"
@@ -14,6 +20,10 @@ namespace internal {
 
 void CpuFeatures::FlushICache(void* start, size_t size) {
 #if !defined(USE_SIMULATOR)
+# ifdef __OpenBSD__
+	struct riscv_sync_icache_args args = { (u_int64_t)(uintptr_t)start, size };
+	sysarch(RISCV_SYNC_ICACHE, &args);
+# else
   char* end = reinterpret_cast<char*>(start) + size;
   // The definition of this syscall is equal to
   // SYSCALL_DEFINE3(riscv_flush_icache, uintptr_t, start,
@@ -25,6 +35,7 @@ void CpuFeatures::FlushICache(void* start, size_t size
   // corresponding system call number used in the kernel to dispatch the system
   // call.
   syscall(__NR_riscv_flush_icache, start, end, 1);
+# endif // __OpenBSD__
 #endif  // !USE_SIMULATOR.
 }
 
