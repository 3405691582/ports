Provide dav1d_getauxval() wrapper for getauxvaul() and elf_aux_info()
93f12c117a4e1c0cc2b129dcc52e84dbd9b84200

Index: src/arm/cpu.c
--- src/arm/cpu.c.orig
+++ src/arm/cpu.c
@@ -43,15 +43,8 @@
 #define HWCAP2_AARCH64_I8MM   (1 << 13)
 
 COLD unsigned dav1d_get_cpu_flags_arm(void) {
-#if HAVE_GETAUXVAL
-    unsigned long hw_cap = getauxval(AT_HWCAP);
-    unsigned long hw_cap2 = getauxval(AT_HWCAP2);
-#else
-    unsigned long hw_cap = 0;
-    unsigned long hw_cap2 = 0;
-    elf_aux_info(AT_HWCAP, &hw_cap, sizeof(hw_cap));
-    elf_aux_info(AT_HWCAP2, &hw_cap2, sizeof(hw_cap2));
-#endif
+    unsigned long hw_cap = dav1d_getauxval(AT_HWCAP);
+    unsigned long hw_cap2 = dav1d_getauxval(AT_HWCAP2);
 
     unsigned flags = dav1d_get_default_cpu_flags();
     flags |= (hw_cap & HWCAP_AARCH64_ASIMDDP) ? DAV1D_ARM_CPU_FLAG_DOTPROD : 0;
@@ -69,12 +62,7 @@ COLD unsigned dav1d_get_cpu_flags_arm(void) {
 #define HWCAP_ARM_I8MM    (1 << 27)
 
 COLD unsigned dav1d_get_cpu_flags_arm(void) {
-#if HAVE_GETAUXVAL
-    unsigned long hw_cap = getauxval(AT_HWCAP);
-#else
-    unsigned long hw_cap = 0;
-    elf_aux_info(AT_HWCAP, &hw_cap, sizeof(hw_cap));
-#endif
+    unsigned long hw_cap = dav1d_getauxval(AT_HWCAP);
 
     unsigned flags = dav1d_get_default_cpu_flags();
     flags |= (hw_cap & HWCAP_ARM_NEON) ? DAV1D_ARM_CPU_FLAG_NEON : 0;
