#1 (local): support -D -s

#2 (from upstream): unbreak -D -S
From decca6d290fb56adc0ef21525f14ea138aca6d45 Mon Sep 17 00:00:00 2001
From: RincewindsHat <12514511+RincewindsHat@users.noreply.github.com>
Date: Thu, 19 Oct 2023 11:31:28 +0200
Subject: [PATCH] check_smtp: Restore behaviour pre
 ead5526efa4f713e8001baed409067b0474cb72d regarding -D and TLS

Index: plugins/check_smtp.c
--- plugins/check_smtp.c.orig
+++ plugins/check_smtp.c
@@ -288,6 +288,8 @@ main (int argc, char **argv)
 			printf("%s", buffer);
 		}
 
+		}
+		if(use_starttls || use_ssl) {
 #  ifdef USE_OPENSSL
 		  if ( check_cert ) {
                     result = np_net_ssl_check_cert(days_till_exp_warn, days_till_exp_crit);
@@ -480,6 +482,8 @@ process_arguments (int argc, char **argv)
 	int c;
 	char* temp;
 
+	bool implicit_tls = false;
+
 	enum {
 	  SNI_OPTION
 	};
@@ -650,6 +654,8 @@ process_arguments (int argc, char **argv)
 #else
 			usage (_("SSL support not available - install OpenSSL and recompile"));
 #endif
+			implicit_tls = true;
+			// fallthrough
 		case 's':
 		/* ssl */
 			use_ssl = TRUE;
@@ -717,7 +723,12 @@ process_arguments (int argc, char **argv)
 		from_arg = strdup(" ");
 
 	if (use_starttls && use_ssl) {
-		usage4 (_("Set either -s/--ssl/--tls or -S/--starttls"));
+		if (implicit_tls) {
+			use_ssl = false;
+			server_port = SMTP_PORT;
+		} else {
+			usage4 (_("Set either -s/--ssl/--tls or -S/--starttls"));
+		}
 	}
 
 	if (server_port_option != 0) {
